#!/usr/bin/make -f

PKG_VERSION := $(shell dpkg-parsechangelog | awk '/^Version:/ {print $$2}')
LLVM_VERSION := 21

export DEB_CFLAGS_MAINT_STRIP = -g -O2
export DEB_CXXFLAGS_MAINT_STRIP = -g -O2

# [Shane] Not sure if this actually helped
# This is how my local build worked inside 16GM RAM VM
export DEB_BUILD_OPTIONS=parallel=2
export DEB_BUILD_MAINT_OPTIONS=optimize=-lto

include /usr/share/dpkg/buildflags.mk

%:
	dh $@

stamps/configure: stamps/preconfigure
	:

stamps/preconfigure:
	rm -rf build
	mkdir -p build/_deps/
	cp -rf vendor/emhash build/_deps/emhash-headers-src
	cp -rf vendor/parallel-hashmap build/_deps/parallel-hashmap-src
	mkdir -p build/content-exp-headers/
	cp -rf vendor/compute-runtime/level_zero/ build/content-exp-headers/

override_dh_auto_configure: stamps/configure
	python3 ${CURDIR}/buildbot/configure.py \
		--l0-headers /usr/include/level_zero/ \
		--l0-loader /usr/lib/x86_64-linux-gnu/libze_loader.so \
		--disable-jit \
		--cmake-opt="-DLLVM_ENABLE_LTO=OFF" \
		--cmake-opt="-DCMAKE_BUILD_TYPE=Release" \
		--cmake-opt="-DBOOTSTRAP_CMAKE_BUILD_TYPE=RelWithDebInfo" \
		--cmake-opt="-DLLVM_PARALLEL_LINK_JOBS=16" \
		--cmake-opt="-DCLANG_DEFAULT_LINKER=ld" \
		--cmake-opt="-DCLANG_DEFAULT_RTLIB=libgcc" \
		--cmake-opt="-DLLVM_ENABLE_RTTI=ON" \
		--cmake-opt="-DLLVM_BUILD_LLVM_DYLIB:BOOL=ON" \
		--cmake-opt="-DSYCL_UR_USE_FETCH_CONTENT=OFF" \
		--cmake-opt="-DLLVMGenXIntrinsics_SOURCE_DIR=${CURDIR}/vendor/vc-intrinsics" \
		--cmake-opt="-DFETCHCONTENT_FULLY_DISCONNECTED=ON" \
		--cmake-opt="-DSYCL_UR_SOURCE_DIR=${CURDIR}/vendor/unified-runtime" \
		--cmake-opt="-DUR_OPENCL_INCLUDE_DIR=/usr/include/" \
		--cmake-opt="-DUR_USE_EXTERNAL_UMF=ON" \
		--cmake-opt="-DOpenCL_INCLUDE_DIR=/usr/include/" \
		--cmake-opt="-DBOOST_MP11_SOURCE_DIR=${CURDIR}/vendor/mp11-boost" \
		--cmake-opt="-DLLVM_EXTERNAL_SPIRV_HEADERS_SOURCE_DIR=/usr/include/" \

override_dh_auto_build:
	python3 ${CURDIR}/buildbot/compile.py -j`nproc`

override_dh_auto_install:
	# Install binaries to debian/tmp/usr
	cd build && DESTDIR=$(CURDIR)/debian/tmp ninja install

# TODO
override_dh_shlibdeps:
	:
	#dh_shlibdeps -ldebian/tmp/src/build/install/lib/ --dpkg-shlibdeps-params=--ignore-missing-info

override_dh_clean:
	rm -rf ${UR_BUILD_XPTI_LIBS}
	rm -rf build
	dh_clean
